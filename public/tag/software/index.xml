<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software | Dillon Corrigan</title>
    <link>https://dillonicus.github.io/tag/software/</link>
      <atom:link href="https://dillonicus.github.io/tag/software/index.xml" rel="self" type="application/rss+xml" />
    <description>software</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 02 Mar 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://dillonicus.github.io/images/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_2.png</url>
      <title>software</title>
      <link>https://dillonicus.github.io/tag/software/</link>
    </image>
    
    <item>
      <title>multinomss</title>
      <link>https://dillonicus.github.io/project/multinomss/</link>
      <pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://dillonicus.github.io/project/multinomss/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Detecting Clusters in Space-Time with multinomss</title>
      <link>https://dillonicus.github.io/post/multinomss/</link>
      <pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://dillonicus.github.io/post/multinomss/</guid>
      <description>


&lt;div id=&#34;overview&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;This post summarizes the capstone (plan B) project I completed as student in the &lt;a href=&#34;https://www.sph.umn.edu/academics/divisions/biostatistics/&#34;&gt;Division of Biostatistics&lt;/a&gt; at the &lt;a href=&#34;https://www.sph.umn.edu/&#34;&gt;University of Minnesota School of Public Health&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Spatial and space-time scan statistics are commonly used in epidemiology, veterinary population medicine, and other disciplines that rely on geospatial data to determine whether point processes are random or if clustering of points can be detected. To this end, I developed an R package, &lt;code&gt;multinomss&lt;/code&gt;, that implements the multinomial space-time scan statistic and produces easy-to-read results and interactive visualizations. &lt;a href=&#34;http://raptor.umn.edu&#34;&gt;The Raptor Center&lt;/a&gt; (TRC) at the University of Minnesota &lt;a href=&#34;http://vetmed.umn.edu&#34;&gt;College of Veterinary Medicine&lt;/a&gt; conducts research to identify emerging and persistent environmental issues related to raptor health. I will demonstrate the application of &lt;code&gt;multinomss&lt;/code&gt; using TRC data and show equivalency to the results obtained via SaTScan, a popular stand-alone software that unfortunately is not open-source. Statistical and computational limitations of the multinomial space-time scan statistic will also be discussed.&lt;/p&gt;
&lt;div id=&#34;outline&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Outline&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#multinomial&#34;&gt;Multinomial Scan Statistic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#software&#34;&gt;Software Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multinomss&#34;&gt;Introduction to &lt;code&gt;multinomss&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#trc&#34;&gt;Case Study&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#data&#34;&gt;Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#discussion&#34;&gt;Discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction to the Scan Statistic&lt;/h2&gt;
&lt;p&gt;Broadly, scan statistics comprise a group of methods used to determine whether or not a point process is random. If a point process is not random, this means there is some kind of clustering of the data. Various flavors of scan statistics have been developed to accommodate different distributional assumptions made about the underlying data generating process. This post (and my project) focus on the multinomial scan statistic.&lt;/p&gt;
&lt;p&gt;Scan statistics are applicable to one, two, and three dimensional spaces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One-dimensional: points on a line&lt;/li&gt;
&lt;li&gt;Two-dimensional: points on a plane&lt;/li&gt;
&lt;li&gt;Three-dimensional: points on a plane changing over time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the two- and three-dimensional cases, these points can be organized into regions of space and/or time called “scanning windows” (&lt;a href=&#34;#fig1&#34;&gt;fig. 1&lt;/a&gt;). These scanning windows are then varied in size and/or height to capture different sets of points for which the scan statistic is calculated.&lt;/p&gt;
&lt;div id=&#34;fig1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-2&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;images/cluster_image.png&#34; alt=&#34;Example of Scanning Windows&#34; width=&#34;1353&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Example of Scanning Windows
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;multinomial&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Multinomial Scan Statistic&lt;/h3&gt;
&lt;p&gt;Scan statistics have been applied to Poisson, Bernoulli, exponential, Gaussian/Normal, ordinal, and multinomial data. The simplest case is the Bernoulli scan statistic, which is used when observations belong to one of two categories (often cases vs. controls). The multinomial scan statistic is an extension of this, where observations belong to one of &amp;gt;2 categories (e.g. different types of cancer in a study area).&lt;/p&gt;
&lt;p&gt;The multinomial scan statistic, as detailed by  is simply an extension of the likelihood ratio test statistic. Suppose we are interested in identifying potential clustering of observations within a study area and each observation can belong to one of &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; different groups. The number of observations in the study area belonging to group &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; is defined as &lt;span class=&#34;math inline&#34;&gt;\(C_k\)&lt;/span&gt;, where the total number of observations in the study area is &lt;span class=&#34;math inline&#34;&gt;\(\sum_{k}{C_k} = C\)&lt;/span&gt;. Within a given scanning window &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt;, the number of observations belonging to group &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; is &lt;span class=&#34;math inline&#34;&gt;\(C_k(Z)\)&lt;/span&gt;. It follows that the total number of observations within scanning window &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt; is &lt;span class=&#34;math inline&#34;&gt;\(\sum_k{C_k(Z)} = C(Z)\)&lt;/span&gt;. Under the null hypothesis of the likelihood ratio test, the probability of an observation being in group &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; inside scanning window &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt; (&lt;span class=&#34;math inline&#34;&gt;\(p_k\)&lt;/span&gt;) is equal to the probability of an observation belonging to group &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; outside of scanning window &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt; (&lt;span class=&#34;math inline&#34;&gt;\(q_k\)&lt;/span&gt;) for all &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; groups:
&lt;span class=&#34;math display&#34;&gt;\[H_0: p_1 = q_1, \dots , p_K = q_K. \]&lt;/span&gt;
The alternative hypothesis is that for at least one of the &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; groups, this equality does not hold. The maximum likelihood estimators of &lt;span class=&#34;math inline&#34;&gt;\(p_k\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(q_k\)&lt;/span&gt; are simply the proportion of observations in scanning window &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt; that belong to group &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; and the proportion of observations not in scanning window &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt; that belong to group &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;, respectively:
&lt;span class=&#34;math display&#34;&gt;\[\hat{p}_k = \frac{C_k(Z)}{C(Z)} \ \text{and} \ \hat{q}_k = \frac{C_k - C_k(Z)}{C - C(Z)}.\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The likelihood ratio test statistic for scanning window &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt; can then be computed to have the form&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34; id=&#34;eq:lrt&#34;&gt;\[
\begin{equation}
\log \lambda_{Z} = \sum_{k} \left\{ C_k(Z) \log\left( \frac{C_k(Z)}{C(Z)} \right) + (C_k - C_k(Z)) log\left( \frac{C_k - C_k(Z)}{C - C(Z)} \right) \right\} - \sum_{k} C_k log \left( \frac{C_k}{C} \right)
\tag{1}
\end{equation}
\]&lt;/span&gt;
the form shown in Equation &lt;a href=&#34;#eq:lrt&#34;&gt;(1)&lt;/a&gt;
The scanning window with the largest test statistic &lt;span class=&#34;math inline&#34;&gt;\(\log \lambda_{Z}\)&lt;/span&gt; is the most likely cluster.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;software&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Review of Existing Software&lt;/h2&gt;
&lt;p&gt;SaTScan is a stand-alone software that was developed by Martin Kulldorff in 1997. This program implements many flavors of the scan statistic, is feature-rich and has been highly optimized over time. However, it is &lt;em&gt;NOT&lt;/em&gt; open source. There are some existing &lt;code&gt;R&lt;/code&gt; packages that have been developed as an open-source alternative to SaTScan, namely:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;smerc&lt;/code&gt; (spatial data only)&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SpatialEpi&lt;/code&gt; (spatial data only)&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Scanstatistics&lt;/code&gt; (Bernoulli and Poisson data only)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For this project, I developed an open source &lt;code&gt;R&lt;/code&gt; package that&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;multinomss&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction to &lt;code&gt;multinomss&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The multinomss package includes functions that allow users to detect spatiotemporal clusters in multinomial data using the retrospective space-time scan statistic. Like the other R packages discussed above, this package integrates  code via   to allay the computational burden inherent to scan statistics. The package also includes functions to produce interactive visualizations of clusters using the &lt;code&gt;leaflet&lt;/code&gt; package. Source code for the &lt;code&gt;multinomss&lt;/code&gt; package is available on &lt;a href=&#34;https://github.com/Dillonicus/multinomss&#34;&gt;GitHub&lt;/a&gt; and can be installed in &lt;code&gt;R&lt;/code&gt; using the &lt;code&gt;devtools&lt;/code&gt; package:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;Dillonicus/multinomss&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The analysis pipeline in &lt;code&gt;multinomss&lt;/code&gt; consists of three primary steps: (1) identify cylindrical space-time windows through which to scan; (2) determine the most likely cluster; and (3) conduct Monte Carlo simulation for calculation of p-values (&lt;a href=&#34;#fig2&#34;&gt;fig. 2&lt;/a&gt;). These steps can be carried out using the core functions of &lt;code&gt;multinomss&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;fig2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-4&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;images/flowchart.png&#34; alt=&#34;Analysis pipeline in `multinoms`&#34; width=&#34;1736&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Analysis pipeline in &lt;code&gt;multinoms&lt;/code&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;trc&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Case Study&lt;/h2&gt;
&lt;p&gt;The Raptor Center (TRC) at the University of Minnesota College of Veterinary Medicine was established in 1974 as a medical clinic, educational center, and veterinary training facility. In addition to treating around 1,000 sick and injured birds of prey annually, TRC conducts research to identify emerging and persistent environmental issues related to raptor health. Since 1990, TRC has maintained an electronic medical database on rehabilitated animals. These data, along with data from partnering organizations such as the Wildlife Rehabilitation Center of Minnesota (WRC), are invaluable to our understanding of drivers of health in wildlife populations.&lt;/p&gt;
&lt;div id=&#34;data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Data&lt;/h3&gt;
&lt;p&gt;The data used in this case study come from a subset of 5,876 raptors that were admitted to TRC between January 2013 and September 2018. Upon admission to TRC, each bird is assigned a unique identification number and the species and admission date are recorded. Some birds also have information about the location from which they were recovered. As this is a space-time analysis, only birds with an associated recovery location are considered in this case study. The final analysis set is comprised of n = 3,810 raptors admitted to TRC between October 2014 and September 2018 for which the recovery location is available. Few isolated observations are located outside of the Upper Midwest (&lt;a href=&#34;#fig3&#34;&gt;fig. 3&lt;/a&gt;). There is no indication that the locations associated with these observations are erroneous. Due to the sparsity of these observations, they are unlikely to be captured in any significant clusters. Inclusion of these points in the analysis will slightly inflate the value of the likelihood ratio statistic under the null hypothesis, but not to an extent that will alter the final results.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;fig3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-5&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;images/map1.png&#34; alt=&#34;Map of data used in analysis&#34; width=&#34;725&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3: Map of data used in analysis
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;images/satscan_clustermap.png&#34; width=&#34;50%&#34; style=&#34;display: inline-block; padding:10px&#34; /&gt;&lt;img src=&#34;images/multinomss_clustermap.png&#34; width=&#34;50%&#34; style=&#34;display: inline-block; padding:10px&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;discussion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Discussion&lt;/h2&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CCtemplates</title>
      <link>https://dillonicus.github.io/project/cctemplates/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://dillonicus.github.io/project/cctemplates/</guid>
      <description>&lt;h1 id=&#34;cctemplates&#34;&gt;CCtemplates&lt;/h1&gt;
&lt;!-- badges: start --&gt;
&lt;!-- badges: end --&gt;
&lt;p&gt;This R package provides ready-to-use HTML and PDF output formats and templates for RMarkdown documents, with a focus on generating standardized statistical reports for the Cleveland Clinic.&lt;/p&gt;
&lt;h2 id=&#34;formats-gallery&#34;&gt;Formats gallery&lt;/h2&gt;
&lt;p&gt;The package provides HTML and PDF output formats. Examples of these will be added later.&lt;/p&gt;
&lt;h3 id=&#34;html_report&#34;&gt;&lt;code&gt;html_report&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Adapted from the &lt;a href=&#34;https://bookdown.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bookdown&lt;/a&gt; theme. Fully responsive with a dynamic table of contents and collapsible navigation. Also includes ability to export HTML as a formatted MS Word document using JavaScript.&lt;/p&gt;
&lt;h3 id=&#34;pdf_report&#34;&gt;&lt;code&gt;pdf_report&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Generates a PDF document with branded header and subject block.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;The latest version of the package can be downloaded from GitHub:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&#39;remotes&#39;) # if necessary
remotes::install_github(&amp;quot;dillonicus/CCtemplates&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;starting-a-new-project&#34;&gt;Starting a new project&lt;/h2&gt;
&lt;p&gt;To start a new project, simply use the &lt;code&gt;CCtemplates::project_create&lt;/code&gt; function. This function takes various information about the project, generates a unique project ID, then creates a project directory and sub-folders containing pre-populated &lt;code&gt;rmarkdown&lt;/code&gt;, R, and SAS files. A document entitled &amp;lsquo;project_list.csv&amp;rsquo; will also be created in the main directory to track projects created with this function.&lt;/p&gt;
&lt;p&gt;The function requires several arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;project_folder&lt;/code&gt;: Main project folder directory (where all projects are created/stored). Defaults to the default non-project directory in RStudio; and&lt;/li&gt;
&lt;li&gt;&lt;code&gt;client_name&lt;/code&gt;: Name of the client/PI of the project. Used to generate project ID.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional arguments can be supplied to give more details about the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;client_email&lt;/code&gt;: Email of the client/PI;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;statistician_name&lt;/code&gt;: Name of the lead statistician;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;statistician_email&lt;/code&gt;: Email of the lead statistician;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;programmer&lt;/code&gt;: Name of the statistical programmer (if applicable);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;department&lt;/code&gt;: Indicates which department the project is for. This will create a sub-folder within the main project directory if one does not already exist;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;project_title&lt;/code&gt;: Optional title for the project;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;start_date&lt;/code&gt;: Start date of the project. Default is today&amp;rsquo;s date;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt;: Version number of the project. Default is &amp;lsquo;1.0&amp;rsquo;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;notes&lt;/code&gt;: Any general notes about the project; and&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output_format&lt;/code&gt;: Changes the output format of the &lt;code&gt;rmarkdown&lt;/code&gt; file created in the &amp;lsquo;memo&amp;rsquo; folder. Options are &amp;lsquo;html&amp;rsquo; (default) or &amp;lsquo;pdf&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;CCtemplates::project_create(
  project_folder = &amp;quot;~/&amp;quot;, 
  start_date = Sys.Date(), 
  client_name = &amp;quot;Client Name&amp;quot;, 
  client_email = &amp;quot;client_name@ccf.org&amp;quot;,
  statistician_name = &amp;quot;Dillon Corrigan&amp;quot;, 
  statistician_email = &amp;quot;corrigand3@ccf.org&amp;quot;, 
  programmer = &amp;quot;Programmer Name&amp;quot;, 
  version = &amp;quot;1.0&amp;quot;, 
  department = &amp;quot;GUKI&amp;quot;, 
  project_title = &amp;quot;Test Project&amp;quot;, 
  output_format = &amp;quot;html&amp;quot;, 
  notes = &amp;quot;This is not a real project&amp;quot;
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;removing-a-completed-project&#34;&gt;Removing a completed project&lt;/h2&gt;
&lt;p&gt;Projects can also be archived and/or deleted from the main project file using the &lt;code&gt;CCtemplates::project_remove&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;The function requires several arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;project_folder&lt;/code&gt;: Main project folder directory (where all projects are created/stored). Defaults to the default non-project directory in RStudio; and&lt;/li&gt;
&lt;li&gt;&lt;code&gt;project_id&lt;/code&gt;: The ID of the project you wish to archive/remove. This is stored and looked up in the &amp;lsquo;project_list.csv&amp;rsquo; file created by &lt;code&gt;CCtemplates::project_create()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An additional argument, &lt;code&gt;keep_zip&lt;/code&gt;, indicates whether you would like to archive the project prior to deletion. If set to &lt;code&gt;TRUE&lt;/code&gt; (default), all project files will be added to a .zip archive and copied to a sub-folder of the main project folder directory called &amp;lsquo;Completed.&amp;rsquo; If set to &lt;code&gt;FALSE&lt;/code&gt;, no archive will be made and all files will be deleted. If set to &lt;code&gt;FALSE&lt;/code&gt; the user will be prompted twice to confirm deletion without archive before proceeding.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;CCtemplates::project_remove(
  project_folder = &amp;quot;~/Projects&amp;quot;,
  project_id = &amp;quot;D1234&amp;quot;,
  keep_zip = TRUE
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;creating-a-new-document&#34;&gt;Creating a new document&lt;/h2&gt;
&lt;p&gt;Create a new &lt;code&gt;Rmd&lt;/code&gt; file and add the following to the YAML preamble:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;---
output: CCtemplates::&amp;lt;template name&amp;gt;
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Within RStudio, you can also choose &lt;code&gt;File&lt;/code&gt; &amp;gt; &lt;code&gt;New File...&lt;/code&gt; &amp;gt; &lt;code&gt;R Markdown...&lt;/code&gt; then select &lt;code&gt;From Template&lt;/code&gt;. You should then be able to create a new document from one of the package templates.&lt;/p&gt;
&lt;h2 id=&#34;options&#34;&gt;Options&lt;/h2&gt;
&lt;p&gt;Depending on output format, additional metadata and output options can be specified in the YAML preamble.&lt;/p&gt;
&lt;h3 id=&#34;metadata&#34;&gt;Metadata&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;title&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;project&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;client&lt;/code&gt;: PI for project. Name and email can be specified as list of entries under the &lt;code&gt;client&lt;/code&gt; field.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;statistician&lt;/code&gt;: Statistician preparing report. Name and email can be specified as a list of entries under the &lt;code&gt;statistician&lt;/code&gt; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;output-formatting&#34;&gt;Output formatting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fig_width&lt;/code&gt;: figures width, in inches&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fig_height&lt;/code&gt;: figures width, in inches&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fig_caption&lt;/code&gt;: toggle figure caption rendering&lt;/li&gt;
&lt;li&gt;&lt;code&gt;highlight&lt;/code&gt;: syntax highlighting&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thumbnails&lt;/code&gt;: if TRUE, display content images as thumbnails&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lightbox&lt;/code&gt;: if TRUE, add lightbox effect to content images&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gallery&lt;/code&gt;: if TRUE, add navigation between images when displayed in lightbox&lt;/li&gt;
&lt;li&gt;&lt;code&gt;use_bookdown&lt;/code&gt;: if TRUE, will use &lt;code&gt;bookdown&lt;/code&gt; instead of &lt;code&gt;rmarkdown&lt;/code&gt; for HTML rendering (adds section numbering and cross-referencing)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;---
title: &amp;quot;Test Project&amp;quot;
date: &amp;quot;`r Sys.Date()`&amp;quot;
project: 
 - id: &amp;quot;D1234&amp;quot;
version: &amp;quot;1.0&amp;quot;
client: 
 - name: &amp;quot;Client Name&amp;quot;
   email: &amp;quot;client_name@ccf.org&amp;quot;
statistician: 
 - name: &amp;quot;Dillon Corrigan&amp;quot;
   email: &amp;quot;corrigd3@ccf.org&amp;quot;
output: CCtemplates::html_report
---
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;credits&#34;&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The CSS for &lt;code&gt;html_report&lt;/code&gt; is directly derived from the &lt;a href=&#34;https://bookdown.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bookdown&lt;/a&gt; project template.&lt;/li&gt;
&lt;li&gt;JavaScript and HTML code for code folding and tabbed sections are taken from RStudio&amp;rsquo;s default &lt;code&gt;rmarkdown&lt;/code&gt; HTML template.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/juba/rmdformats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rmdformats&lt;/a&gt; package served as a general reference for the &lt;code&gt;html_report&lt;/code&gt; format.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
